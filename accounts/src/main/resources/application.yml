server:
 port: 8080
spring:
 application:
  name: accounts
 profiles:
  active: "prod"
 datasource:
  url: jdbc:mysql://192.168.186.128:4306/accountsdb
  username: accounts
  password: password
 jpa:
  show-sql: true
 sql:
  init:
   mode: always
 config:
  import: "optional:configserver:http://localhost:8071/"
 cloud:
  openfeign:
   circuitbreaker:
    enabled: true
  function:
   definition: updateCommunication
  stream:
   bindings:
    updateCommunication-in-0:
     destination: communication-sent
     group: ${spring.application.name}
    sendCommunication-out-0:
     destination: send-communication
 rabbitmq:
  host: 192.168.186.128
  port: 5672
  username: guest
  password: guest
  connection-timeout: 10s
 metrics:
  tags:
   application: ${spring.application.name}

management:
 endpoints:
  web:
   exposure:
    include: "*"
 health:
  readiness-status:
   enabled: true
  liveness-status:
   enabled: true
 endpoint:
  shutdown:
   enabled: true
  health:
   probes:
    enabled: true
 info:
  env:
   enabled: true

eureka:
 instance:
  preferIpAddress: true
 client:
  fetchRegistry: true
  registerWithEureka: true
  serviceUrl:
   defaultZone: http://localhost:8070/eureka/

info:
 app:
  name: "accounts"
  description: "Eazy Bank Accounts Application"
  version: "1.0.0"

logging:
 level:
  com:
   eazybytes:
    accounts: DEBUG
 pattern:
  level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
 configs:
  default:
   slidingWindowSize: 10
   permittedNumberOfCallsInHalfOpenState: 2
   failureRateThreshold: 50
   waitDurationInOpenState: 10000

resilience4j.retry:
 configs:
  default:
   maxAttempts: 3
   waitDuration: 500
   enableExponentialBackoff: true
   exponentialBackoffMultiplier: 2
   ignoreExceptions:
    - java.lang.NullPointerException
   retryExceptions:
    - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
 configs:
  default:
   timeoutDuration: 1000
   limitRefreshPeriod: 5000
   limitForPeriod: 1